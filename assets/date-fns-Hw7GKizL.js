const g=Symbol.for("constructDateFrom");function O(t,o){return typeof t=="function"?t(o):t&&typeof t=="object"&&g in t?t[g](o):t instanceof Date?new t.constructor(o):new Date(o)}function f(t,o){return O(t,t)}function S(t,o){const n=f(t);return n.setHours(0,0,0,0),n}function b(t,o){const n=f(t);return n.setHours(23,59,59,999),n}function e(t,o){const n=t<0?"-":"",s=Math.abs(t).toString().padStart(o,"0");return n+s}function M(t,o){const n=f(t);if(isNaN(+n))throw new RangeError("Invalid time value");let s="",c="";const u="-",$=":";{const r=e(n.getDate(),2),i=e(n.getMonth()+1,2);s=`${e(n.getFullYear(),4)}${u}${i}${u}${r}`}{const r=n.getTimezoneOffset();if(r!==0){const m=Math.abs(r),D=e(Math.trunc(m/60),2),h=e(m%60,2);c=`${r<0?"+":"-"}${D}:${h}`}else c="Z";const i=e(n.getHours(),2),a=e(n.getMinutes(),2),l=e(n.getSeconds(),2),p=s===""?"":"T",y=[i,a,l].join($);s=`${s}${p}${y}${c}`}return s}export{b as e,M as f,S as s};
